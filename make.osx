#
#
#  The machine (platform) identifier to append to the library names
#
SHELL = /bin/sh

# for debugging
OPT_LEVEL=1
# for release
#OPT_LEVEL=3

PLAT = _OSX
LAPACKLIBS = -llapack -lblas
F2CLIB = -lgfortran
# commands to make statically&dynamically linked libraries and their extensions
LIBSCOMMAND = ar rcs
LIBDCOMMAND = gcc -shared -o
LIBSEXT = .a
LIBDEXT = .so

# Python-numpy interface
NPYLIBS = -lcnpy -lz
#NPYLIBDIR = /usr/local/lib
#NPYLINKFLAG =-L${NPYLIBDIR} ${NPYLIBS}
NPYLINKFLAG =${NPYLIBS}

# optim library
OPTIMDIR =../optim/header_only_version
# OPTIMDIR =../optim
# ARMADILLODIR =../armadillo
OPTIMFLAG =-O${OPT_LEVEL} -march=native -ffp-contract=fast -DINCLUDE_OPTIM -I${OPTIMDIR}
# OPTIMFLAG =-O${OPT_LEVEL} -march=native -ffp-contract=fast -I${ARMADILLODIR} -I${OPTIMDIR}
# OPTIMLINKFLAG = -loptim  # not linking currently since linking would involve with current setup, linking to blas/lapack a second time, causing linker errors

# matplotlibcpp library
# MATPLOTLIB_CPP_INCLUDE_DIRS =matplotlibcpp.h

# matplotpp
MATPLOT_INCLUDE_DIRS =matplot
MATPLOTLINKFLAG = -lmatplot

#BOOSTLIB =-L/usr/local/lib -lboost_math_tr1  # not needed with boost installed via homebrew on macos

# TODO fix, put json library in dependencies directory
JSON_INCLUDE_DIRS =-I../

# Uncomment these lines to set up the MATLAB interface.
#MATLABLIBS = -lmat -lmx
#MATLABBASE=/usr/local/pkg/matlab/
#MATLABRUNLIBDIR=${MATLABBASE}/bin/glnx86
#MATLABLIBDIR=${MATLABBASE}/bin/glnx86
#MATLABINCLUDE=${MATLABBASE}/extern/include
#MATLABXLINKFLAG=-L${MATLABLIBDIR} -Xlinker -rpath -Xlinker ${MATLABRUNLIBDIR} 
#MATLABFLAG=-D_NDLMATLAB

INCLUDE = $(MATLABINCLUDE)
LD=g++
LDFLAGS = ${LAPACKLIBS} ${F2CLIB} -lc ${NPYLINKFLAG} ${MATPLOTLINKFLAG}
CC=g++
CCFLAGS = -std=c++17 -ggdb -DDBG -fPIC -I$(INCLUDE) -D$(PLAT) $(MATLABFLAG) $(OPTIMFLAG) $(JSON_INCLUDE_DIRS) -mmacosx-version-min=11.0
FC=gfortran-7
FCFLAGS = -funroll-all-loops -O${OPT_LEVEL} -fPIC
