#
#
#  The machine (platform) identifier to append to the library names
#
SHELL = /bin/sh

PLAT = _WIN
LAPACKLIBS = -L../../lib64 -llapack64 -lblas64
F2CLIB = -lgfortran
OPT_LEVEL=0
# Qt used in this build; set paths to QtCore directories and add Qt5Core.dll to project directory
QTINCLUDE=-isystem C:/Qt/Qt5.12.12/5.12.12/mingw73_64/include -isystem C:/Qt/Qt5.12.12/5.12.12/mingw73_64/include/QtCore
QTLIBS=-L. -lQt5Core

# commands to make statically&dynamically linked libraries and their extensions
#LIBSCOMMAND = ar rcs
#LIBDCOMMAND = gcc -shared -o
#LIBSEXT = .a
#LIBDEXT = .so

DEP_DIR =..
# for dependency dir used for direct include

# Python-numpy interface
#NPYLIBS = -lcnpy -lz
#NPYLINKFLAG =${NPYLIBS}

# optim library
OPTIMDIR=${DEP_DIR}/optim/header_only_version
OPTIMFLAG =-O${OPT_LEVEL} -march=native -ffp-contract=fast -I${OPTIMDIR}
# OPTIMFLAG =-O3 -march=native -ffp-contract=fast -I${ARMADILLODIR} -I${OPTIMDIR}
# OPTIMLINKFLAG = -loptim
# for armadillo backend in place of eigen. Not currently being used.
# ARMADILLO_DIR =/usr/local/include/armadillo
#EIGEN_DIR =-I${DEP_DIR}/

# matplot
#MATPLOT_INCLUDE_DIRS =-I$(DEP_DIR)/matplotplusplus/source/
#MATPLOT_INCLUDE_DEP_NODESOUP_DIR =-I$(DEP_DIR)/matplotplusplus/source/3rd_party/nodesoup/include/
#MATPLOT_INCLUDE_DEP_CIMG_DIR =-I/usr/include/CImg.h -I/usr/include/plugins/
#MATPLOT_INCLUDE =$(MATPLOT_INCLUDE_DIRS) $(MATPLOT_INCLUDE_DEP_NODESOUP_DIR) $(MATPLOT_INCLUDE_DEP_CIMG_DIR)
#NODESOUP_LINK_FLAG =-L$(DEP_DIR)/matplotplusplus/build/source/3rd_party/ -lnodesoup
#MATPLOTLINKFLAG =-L$(DEP_DIR)/matplotplusplus/build/source/matplot/ -lmatplot $(NODESOUP_LINK_FLAG) -lm -lpthread -lX11 -ltiff -ljpeg -lpng -lz

JSON_INCLUDE=-I/${INCLUDE_DIR}/
BOOSTLIB_INCLUDE=-I/${INCLUDE_DIR}/

# Uncomment these lines to set up the MATLAB interface.
#MATLABLIBS = -lmat -lmx
#MATLABBASE=/usr/local/pkg/matlab/
#MATLABRUNLIBDIR=${MATLABBASE}/bin/glnx86
#MATLABLIBDIR=${MATLABBASE}/bin/glnx86
#MATLABINCLUDE=${MATLABBASE}/extern/include
#MATLABXLINKFLAG=-L${MATLABLIBDIR} -Xlinker -rpath -Xlinker ${MATLABRUNLIBDIR} 
#MATLABFLAG=-D_NDLMATLAB

INCLUDE = $(MATLABINCLUDE)
LD=g++
LDFLAGS = ${LAPACKLIBS} ${F2CLIB} ${QTLIBS} #${MATPLOTLINKFLAG} ${NPYLINKFLAG}
CC=g++
CCFLAGS = -std=c++17 -ggdb -DDBG -fPIC $(QTINCLUDE) -I$(DEP_DIR) -D$(PLAT) $(BOOSTLIB_INCLUDE) $(JSON_INCLUDE) $(OPTIMFLAG) #$(MATLABFLAG) $(OPTIMFLAG) ${MATPLOT_INCLUDE_DIRS}
FC=gfortran
# NOTE: under this build for Windows (this does not apply to other systems), all FORTRAN optimization functions included in this repo will fail except for LBFGS-B
# LBFGS-B is the recommended optimizer since it provides for box bounds, which can give stability during fitting.
FCFLAGS = -funroll-all-loops -O0 -fPIC #-fdefault-integer-8 # would like everything under 64-bit, but ndlfortran.f function requires 32-bit instead.
